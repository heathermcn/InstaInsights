{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, TimeScale } from 'chart.js';\nimport 'chartjs-adapter-date-fns';\nimport { Data } from \"../Data\";\nimport { Pane, Text, Heading, majorScale, Button } from 'evergreen-ui';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nChartJS.register(TimeScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nfunction FollowerChart() {\n  var _useState = useState('day'),\n    _useState2 = _slicedToArray(_useState, 2),\n    timeUnit = _useState2[0],\n    setTimeUnit = _useState2[1];\n  function timeUnitChange(unit) {\n    setTimeUnit(unit);\n  }\n  var options = {\n    scales: {\n      x: {\n        type: 'time',\n        time: {\n          parser: 'yyyy-MM-dd',\n          unit: timeUnit,\n          tooltipFormat: 'yyyy-MM-dd',\n          displayFormats: {\n            day: 'MMM dd yyyy'\n          }\n        },\n        distribution: \"linear\",\n        title: {\n          display: true,\n          text: \"Date\"\n        }\n      },\n      y: {\n        title: {\n          display: true,\n          text: \"Followers\"\n        },\n        min: 0\n      }\n    },\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      title: {\n        display: false,\n        text: 'Follower Count'\n      }\n    }\n  };\n  var data = {\n    labels: Data.map(function (data) {\n      return data.date;\n    }),\n    datasets: [{\n      label: 'Instagram Followers',\n      data: Data.map(function (data) {\n        return data.followers;\n      }),\n      borderColor: 'rgb(50, 168, 111)',\n      backgroundColor: 'rgba(50, 168, 111, 0.5)'\n    }]\n  };\n  return _jsxs(\"div\", {\n    children: [_jsx(Pane, {\n      height: 600,\n      width: 1200,\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      border: \"default\",\n      children: _jsx(Line, {\n        options: options,\n        data: data\n      })\n    }), _jsxs(Pane, {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      marginX: majorScale(2),\n      children: [_jsx(Button, {\n        children: \"Day\"\n      }), _jsx(Button, {\n        children: \"Month\"\n      }), _jsx(Button, {\n        children: \"Year\"\n      })]\n    })]\n  });\n}\nexport { FollowerChart };","map":{"version":3,"names":["React","useState","useEffect","Line","Chart","ChartJS","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","TimeScale","Data","Pane","Text","Heading","majorScale","Button","jsx","_jsx","jsxs","_jsxs","register","FollowerChart","_useState","_useState2","_slicedToArray","timeUnit","setTimeUnit","timeUnitChange","unit","options","scales","x","type","time","parser","tooltipFormat","displayFormats","day","distribution","title","display","text","y","min","responsive","plugins","legend","position","data","labels","map","date","datasets","label","followers","borderColor","backgroundColor","children","height","width","alignItems","justifyContent","border","marginX"],"sources":["/Users/heathermcnaughton/Desktop/InstaInsights/components/FollowerChart.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, TimeScale } from 'chart.js';\nimport 'chartjs-adapter-date-fns';\nimport { Data } from '../Data';\nimport { Pane, Text, Heading, majorScale, Button } from 'evergreen-ui';\n\nChartJS.register(\n  TimeScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nfunction FollowerChart() {\n  const [timeUnit, setTimeUnit] = useState('day');\n\n  function timeUnitChange(unit) {\n    setTimeUnit(unit);\n  }\n\n  const options = {\n    scales: {\n      x: {\n        type: 'time',\n        time: {\n          parser: 'yyyy-MM-dd',\n          unit: timeUnit,\n          tooltipFormat: 'yyyy-MM-dd',\n          displayFormats: {\n            day: 'MMM dd yyyy'\n          }\n        },\n        distribution: \"linear\",\n        title: {\n          display: true,\n          text: \"Date\"\n        }\n      },\n      y: {\n        title: {\n          display: true,\n          text: \"Followers\",\n        },\n        min: 0\n      },\n    },\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top',\n      },\n      title: {\n        display: false,\n        text: 'Follower Count',\n      },\n    },\n  };\n\n  const data = {\n    labels: Data.map((data) => data.date),\n    datasets: [\n      {\n        label: 'Instagram Followers',\n        data: Data.map((data) => data.followers),\n        borderColor: 'rgb(50, 168, 111)',\n        backgroundColor: 'rgba(50, 168, 111, 0.5)',\n      }\n    ],\n  };\n\n  return (\n    <div>\n      <Pane height={600} width={1200} display=\"flex\" alignItems=\"center\" justifyContent=\"center\" border=\"default\">\n        <Line options={options} data={data} />\n      </Pane>\n      <Pane display=\"flex\" alignItems=\"center\" justifyContent=\"center\" marginX={majorScale(2)}>\n        <Button>Day</Button>\n        <Button>Month</Button>\n        <Button>Year</Button>\n      </Pane>\n    </div>\n  )\n}\n\nexport { FollowerChart }"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
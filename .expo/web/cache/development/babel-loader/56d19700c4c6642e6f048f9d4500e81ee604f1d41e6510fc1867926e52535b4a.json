{"ast":null,"code":"import React, { useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, TimeScale } from 'chart.js';\nimport 'chartjs-adapter-date-fns';\nimport { Data } from \"./Data\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nChartJS.register(TimeScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nfunction FollowerChart() {\n  var options = {\n    scales: {\n      x: {\n        type: 'time',\n        time: {\n          parser: \"yyyy-MM-dd\",\n          unit: 'day'\n        },\n        distribution: \"linear\",\n        title: {\n          display: true,\n          text: \"Date\"\n        }\n      },\n      y: {\n        title: {\n          display: true,\n          text: \"Followers\"\n        }\n      }\n    },\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      title: {\n        display: false,\n        text: 'Follower Count'\n      }\n    }\n  };\n  var labels = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n  var data = {\n    labels: labels,\n    datasets: [{\n      label: 'Instagram Followers',\n      data: Data.map(function (data) {\n        return data.followers;\n      }),\n      borderColor: 'rgb(50, 168, 111)',\n      backgroundColor: 'rgba(50, 168, 111, 0.5)'\n    }]\n  };\n  return _jsx(Line, {\n    options: options,\n    data: data\n  });\n}\nexport { FollowerChart };","map":{"version":3,"names":["React","useState","Line","Chart","ChartJS","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","TimeScale","Data","jsx","_jsx","register","FollowerChart","options","scales","x","type","time","parser","unit","distribution","title","display","text","y","responsive","plugins","legend","position","labels","data","datasets","label","map","followers","borderColor","backgroundColor"],"sources":["/Users/heathermcnaughton/Desktop/InstaInsights/FollowerChart.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, TimeScale } from 'chart.js';\nimport 'chartjs-adapter-date-fns';\nimport { Data } from './Data';\n\nChartJS.register(\n  TimeScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nfunction FollowerChart() {\n\n  const options = {\n    scales: {\n      x: {\n        type: 'time',\n        time: {\n          parser: \"yyyy-MM-dd\",\n          unit: 'day'\n        },\n        distribution: \"linear\",\n        title: {\n          display: true,\n          text: \"Date\"\n        }\n      },\n      y: {\n        title: {\n          display: true,\n          text: \"Followers\"\n        }\n      },\n    },\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top',\n      },\n      title: {\n        display: false,\n        text: 'Follower Count',\n      },\n    },\n  };\n\n  const labels = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n\n  const data = {\n    labels,\n    datasets: [\n      {\n        label: 'Instagram Followers',\n        data: Data.map((data) => data.followers),\n        borderColor: 'rgb(50, 168, 111)',\n        backgroundColor: 'rgba(50, 168, 111, 0.5)',\n      }\n    ],\n  };\n\n  return <Line options={options} data={data} />;\n\n}\n\nexport { FollowerChart }"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,QAAQ,iBAAiB;AACtC,SAASC,KAAK,IAAIC,OAAO,EAAEC,WAAW,EAAEC,YAAY,EAAEC,WAAW,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,EAAEC,SAAS,QAAQ,UAAU;AACtH,OAAO,0BAA0B;AACjC,SAASC,IAAI;AAAiB,SAAAC,GAAA,IAAAC,IAAA;AAE9BV,OAAO,CAACW,QAAQ,CACdJ,SAAS,EACTN,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,KAAK,EACLC,OAAO,EACPC,MAAM,CACP;AAED,SAASM,aAAaA,CAAA,EAAG;EAEvB,IAAMC,OAAO,GAAG;IACdC,MAAM,EAAE;MACNC,CAAC,EAAE;QACDC,IAAI,EAAE,MAAM;QACZC,IAAI,EAAE;UACJC,MAAM,EAAE,YAAY;UACpBC,IAAI,EAAE;QACR,CAAC;QACDC,YAAY,EAAE,QAAQ;QACtBC,KAAK,EAAE;UACLC,OAAO,EAAE,IAAI;UACbC,IAAI,EAAE;QACR;MACF,CAAC;MACDC,CAAC,EAAE;QACDH,KAAK,EAAE;UACLC,OAAO,EAAE,IAAI;UACbC,IAAI,EAAE;QACR;MACF;IACF,CAAC;IACDE,UAAU,EAAE,IAAI;IAChBC,OAAO,EAAE;MACPC,MAAM,EAAE;QACNC,QAAQ,EAAE;MACZ,CAAC;MACDP,KAAK,EAAE;QACLC,OAAO,EAAE,KAAK;QACdC,IAAI,EAAE;MACR;IACF;EACF,CAAC;EAED,IAAMM,MAAM,GAAG,CAAC,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,WAAW,EAAE,SAAS,EAAE,UAAU,EAAE,UAAU,CAAC;EAEzI,IAAMC,IAAI,GAAG;IACXD,MAAM,EAANA,MAAM;IACNE,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,qBAAqB;MAC5BF,IAAI,EAAEtB,IAAI,CAACyB,GAAG,CAAC,UAACH,IAAI;QAAA,OAAKA,IAAI,CAACI,SAAS;MAAA,EAAC;MACxCC,WAAW,EAAE,mBAAmB;MAChCC,eAAe,EAAE;IACnB,CAAC;EAEL,CAAC;EAED,OAAO1B,IAAA,CAACZ,IAAI;IAACe,OAAO,EAAEA,OAAQ;IAACiB,IAAI,EAAEA;EAAK,EAAG;AAE/C;AAEA,SAASlB,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}